<?php
/**
 * AccountsAPIApiTest
 * PHP version 8.1
 *
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * B2B Operations API
 *
 * This application will be used by HaaS customers as an integration point with HAY Bank
 *
 * The version of the OpenAPI document: 0.0.1
 * @generated Generated by: https://openapi-generator.tech
 * Generator version: 7.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use OpenAPI\Client\Configuration;
use OpenAPI\Client\ApiException;
use OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * AccountsAPIApiTest Class Doc Comment
 *
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class AccountsAPIApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addAccountRule
     *
     * Create Rule for Account.
     *
     */
    public function testAddAccountRule()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for blockAccount
     *
     * Block Account and Customer.
     *
     */
    public function testBlockAccount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for changeAccountRiskLevel
     *
     * Update Account Risk Level.
     *
     */
    public function testChangeAccountRiskLevel()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for closeAccount
     *
     * Closes an account.
     *
     */
    public function testCloseAccount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createAccount
     *
     * Creates an Account.
     *
     */
    public function testCreateAccount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createAccountCustomData
     *
     * Create Custom Data for Account.
     *
     */
    public function testCreateAccountCustomData()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteAccountCustomData
     *
     * Delete Custom Data from Account.
     *
     */
    public function testDeleteAccountCustomData()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteAccountLimit
     *
     * Delete limit from Account.
     *
     */
    public function testDeleteAccountLimit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for disableRule
     *
     * Delete Rule from Account.
     *
     */
    public function testDisableRule()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAccountLimits
     *
     * Get all limits by Account ID.
     *
     */
    public function testGetAccountLimits()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAccountRiskLevel
     *
     * Get Risk Level by Account ID.
     *
     */
    public function testGetAccountRiskLevel()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAccountRuleById
     *
     * Get Rule for Account by Rule ID.
     *
     */
    public function testGetAccountRuleById()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAccountRules
     *
     * Get all Rules by Account ID.
     *
     */
    public function testGetAccountRules()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCardsForAccountId
     *
     * Get all Cards by Account ID.
     *
     */
    public function testGetCardsForAccountId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getHayAccount
     *
     * Get Account by ID.
     *
     */
    public function testGetHayAccount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPendingHolds
     *
     * Get all Authorisation Holds by Account ID.
     *
     */
    public function testGetPendingHolds()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for makeTransferV0
     *
     * Initiate Cash Transfer (DEPRECATED).
     *
     */
    public function testMakeTransferV0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for makeTransferV1
     *
     * Initiate Cash Transfer.
     *
     */
    public function testMakeTransferV1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for searchAccounts
     *
     * Search accounts.
     *
     */
    public function testSearchAccounts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setAccountLimit
     *
     * Set limit for Account.
     *
     */
    public function testSetAccountLimit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for unblockAccount
     *
     * Unblock Account.
     *
     */
    public function testUnblockAccount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateMaxBalanceLimit
     *
     * Update Account max balance.
     *
     */
    public function testUpdateMaxBalanceLimit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateOverdraftLimit
     *
     * Update Account overdraft limit.
     *
     */
    public function testUpdateOverdraftLimit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
