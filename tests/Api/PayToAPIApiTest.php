<?php
/**
 * PayToAPIApiTest
 * PHP version 8.1
 *
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * B2B Operations API
 *
 * This application will be used by HaaS customers as an integration point with HAY Bank
 *
 * The version of the OpenAPI document: 0.0.1
 * @generated Generated by: https://openapi-generator.tech
 * Generator version: 7.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use OpenAPI\Client\Configuration;
use OpenAPI\Client\ApiException;
use OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * PayToAPIApiTest Class Doc Comment
 *
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PayToAPIApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for amendMandateByInitiator
     *
     * Amend Mandate by Initiator.
     *
     */
    public function testAmendMandateByInitiator()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for amendMandateByPayer
     *
     * Amend Mandate by Payer.
     *
     */
    public function testAmendMandateByPayer()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for amendMandatePaymentTerms
     *
     * Amend Mandate payment terms.
     *
     */
    public function testAmendMandatePaymentTerms()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cancelMandateByInitiator
     *
     * Cancel Mandate by Initiator.
     *
     */
    public function testCancelMandateByInitiator()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cancelMandateByPayer
     *
     * Cancel Mandate by Payer.
     *
     */
    public function testCancelMandateByPayer()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for checkBsbIsSupportedByPayTo
     *
     * Check if BSB supports PayTo.
     *
     */
    public function testCheckBsbIsSupportedByPayTo()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createMandate
     *
     * Create Mandate.
     *
     */
    public function testCreateMandate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getMandate
     *
     * Get Mandate by ID.
     *
     */
    public function testGetMandate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getMandateActionsByInitiator
     *
     * Get Mandate Actions by Initiator.
     *
     */
    public function testGetMandateActionsByInitiator()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getMandateActionsByPayer
     *
     * Get Mandate Actions by Payer.
     *
     */
    public function testGetMandateActionsByPayer()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getMandateIdsByInitiator
     *
     * Returns all Mandate IDs for a Shaype Account ID..
     *
     */
    public function testGetMandateIdsByInitiator()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getMandatePaymentStatus
     *
     * Get Payment instruction status by Mandate ID and Payment instruction ID.
     *
     */
    public function testGetMandatePaymentStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getMandates
     *
     * Get Mandates by debtor account numbers.
     *
     */
    public function testGetMandates()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for makeAdhocPayment
     *
     * Make Adhoc Payment.
     *
     */
    public function testMakeAdhocPayment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for releaseMandateByInitiator
     *
     * Release Mandate by Initiator.
     *
     */
    public function testReleaseMandateByInitiator()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for releaseMandateByPayer
     *
     * Release Mandate by Payer.
     *
     */
    public function testReleaseMandateByPayer()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for resolveMandateByInitiator
     *
     * Resolve Mandate by Initiator.
     *
     */
    public function testResolveMandateByInitiator()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for resolveMandateByPayer
     *
     * Resolve Mandate pending action by Payer.
     *
     */
    public function testResolveMandateByPayer()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for searchPaymentsInstructions
     *
     * Search payments instructions by Mandate ID.
     *
     */
    public function testSearchPaymentsInstructions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setScheduledPaymentInitiationRequestAmount
     *
     * Set amount of Scheduled Payment Initiation Request by Initiator.
     *
     */
    public function testSetScheduledPaymentInitiationRequestAmount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for suspendMandateByInitiator
     *
     * Suspend Mandate by Initiator.
     *
     */
    public function testSuspendMandateByInitiator()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for suspendMandateByPayer
     *
     * Suspend Mandate by Payer.
     *
     */
    public function testSuspendMandateByPayer()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
